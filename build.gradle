plugins {
	id 'fabric-loom' version '1.6.+'
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + project.minecraft_version
group = project.maven_group

repositories {

}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching('fabric.mod.json') {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

jar {
	from "LICENSE"
}
def env = System.getenv()

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			mavenJava(MavenPublication) {
				groupId = rootProject.maven_group
				artifactId = project.archivesBaseName
				version = project.version

				from components.java
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
		repositories {
			if (env.MAVEN_URL) {
				maven {
					credentials {
						username env.MAVEN_USERNAME
						password env.MAVEN_PASSWORD
					}
					url env.MAVEN_URL
				}
			} else {
				mavenLocal()
			}
		}
	}
}

if (System.getenv("MODRINTH")) {
	modrinth {
		token = System.getenv("MODRINTH")
		projectId = '5e65FGXQ'
		versionNumber = "" + version
		changelog = System.getenv("CHANGELOG")
		// On fabric, use 'remapJar' instead of 'jar'
		uploadFile = remapJar
		gameVersions = [((String) project.minecraft_version)]
		loaders = ["fabric", "quilt"]
	}

	remapJar {
		finalizedBy project.tasks.modrinth
	}
}
